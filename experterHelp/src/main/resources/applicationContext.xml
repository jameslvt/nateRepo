<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<mvc:annotation-driven></mvc:annotation-driven>
	
	<import resource="controller.xml"/>
	<import resource="service.xml"/>
	
	<!-- 引入配置文件 -->  
     <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>   
    
   
    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	 <property name="defaultEncoding" value="UTF-8" /> 
	</bean>
    
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  >  
        <property name="driverClassName" value="${driverClassName}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="2"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="50"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="20"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="5"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="30000"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/natabm/mapper/*.xml"></property> 
    </bean>  
    
    <!-- transaction support-->
		<!-- PlatformTransactionMnager -->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		    <property name="dataSource" ref="dataSource" />
		</bean>
        <!-- enable transaction annotation support -->
		<tx:annotation-driven transaction-manager="txManager" />
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 --> 	
	<!-- 配置MapperScannerConfigurer,以扫描路径方式批量生成Mapper接口实现 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.natabm.dao"></property>
		<!-- 指定带@MyBatisDao特殊注解标记的接口才生成实现 -->
		<!-- 省略SqlSessionFactory注入，可以自动注入 -->
		<!-- <property name="sqlSessionFactory" ref="ssf"></property> -->
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/npage/"></property>
		<property name="suffix" value=".html"></property>
	</bean>
	
</beans>